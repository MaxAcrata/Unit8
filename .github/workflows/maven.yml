# Название Workflow (процесса автоматизации).
# Это имя будет отображаться в интерфейсе GitHub Actions.
name: Java CI

# Указывает, при каких событиях Workflow будет запускаться.
# В данном случае Workflow автоматически собирает Java-проект при каждом изменении кода (push).
on: [push]

# Определение jobs (задач), которые будут выполняться в рамках Workflow.
jobs:
  # Название задачи (в данном случае задача называется "build").
  build:
    # Указывает, на какой операционной системе будет выполняться задача.
    # В данном случае используется последняя версия Ubuntu.
    runs-on: ubuntu-latest

    # Шаги, которые будут выполнены в рамках задачи.
    steps:
      # Первый шаг: проверка кода из репозитория.
      # Используется действие `actions/checkout@v2`, которое клонирует репозиторий.
      - uses: actions/checkout@v2 # Выкачиваем репозиторий.

      # Второй шаг: установка JDK (Java Development Kit).
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          # Указываем версию JDK 11, которую нужно установить.
          java-version: 11

      # Третий шаг: сборка проекта с помощью Maven.
      - name: Build with Maven
        # Команда, которая будет выполнена для сборки проекта.
        # - `mvn` — команда для запуска Maven.
        # - `-B` — запуск в пакетном режиме (без интерактивного ввода).
        # - `package` — цель Maven для сборки проекта.
        # - `--file pom.xml` — указывает на файл `pom.xml`, который содержит конфигурацию сборки.
        run: mvn -B package --file pom.xml # Запускаем сборку с помощью Maven.
